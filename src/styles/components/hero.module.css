/* Hero Component Styles - CSS Modules */

.hero {
  position: relative;
  min-height: 100vh;
  display: flex;
  align-items: center;
  background-color: var(--bg-primary);
  overflow: hidden;
  padding: var(--space-20) 0;
}

.heroContainer {
  position: relative;
  z-index: 2;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--space-6);
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-16);
  align-items: center;
}

.heroContent {
  display: flex;
  flex-direction: column;
  gap: var(--space-8);
}

.heroTitle {
  font-family: var(--font-display);
  font-size: var(--text-6xl);
  font-weight: var(--font-black);
  line-height: var(--leading-none);
  color: var(--text-primary);
  margin-bottom: var(--space-4);
}

.titleLine {
  display: block;
  overflow: hidden;
}

.titleText {
  display: inline-block;
  transform: translateY(100%);
  animation: slideInFromBottom 0.8s ease-out forwards;
}

.titleText:nth-child(1) {
  animation-delay: 0.1s;
}
.titleText:nth-child(2) {
  animation-delay: 0.3s;
}
.titleText:nth-child(3) {
  animation-delay: 0.5s;
}

.typewriterContainer {
  position: relative;
  height: var(--text-2xl);
  overflow: hidden;
}

.typewriterText {
  font-family: var(--font-code);
  font-size: var(--text-xl);
  color: var(--color-accent);
  font-weight: var(--font-semibold);
  position: absolute;
  top: 0;
  left: 0;
  white-space: nowrap;
  border-right: 2px solid var(--color-accent);
  animation:
    typewriter 2s steps(40, end),
    blinkCursor 1s step-end infinite;
}

.valueProposition {
  font-size: var(--text-lg);
  color: var(--text-secondary);
  line-height: var(--leading-relaxed);
  position: relative;
}

.strikethrough {
  position: relative;
  text-decoration: line-through;
  text-decoration-color: var(--color-accent);
  text-decoration-thickness: 3px;
}

.strikethrough::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 3px;
  background-color: var(--color-accent);
  transform: translateY(-50%) scaleX(0);
  animation: textStrike 0.6s ease-out 1s forwards;
}

.heroMetrics {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--space-6);
  margin: var(--space-8) 0;
}

.metricCard {
  background-color: var(--bg-secondary);
  color: var(--text-inverse);
  padding: var(--space-6);
  border: var(--border-width) var(--border-style) var(--border-primary);
  box-shadow: var(--shadow-brutal);
  position: relative;
  overflow: hidden;
  transition: all var(--duration-normal) var(--easing-brutal);
}

.metricCard:hover {
  transform: translate(-2px, -2px);
  box-shadow: var(--shadow-brutal-double);
}

.metricCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  transition: left var(--duration-slow) var(--easing-out);
}

.metricCard:hover::before {
  left: 100%;
}

.metricValue {
  font-family: var(--font-code);
  font-size: var(--text-3xl);
  font-weight: var(--font-black);
  color: var(--color-accent);
  line-height: 1;
  margin-bottom: var(--space-2);
}

.metricLabel {
  font-size: var(--text-sm);
  font-weight: var(--font-semibold);
  text-transform: uppercase;
  letter-spacing: var(--tracking-wide);
  opacity: 0.8;
}

.heroActions {
  display: flex;
  gap: var(--space-4);
  align-items: center;
}

.primaryCta {
  font-family: var(--font-primary);
  font-size: var(--text-base);
  font-weight: var(--font-bold);
  color: var(--text-inverse);
  background-color: var(--color-accent);
  border: var(--border-width) var(--border-style) var(--color-accent);
  padding: var(--space-4) var(--space-8);
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: var(--tracking-wide);
  position: relative;
  overflow: hidden;
  box-shadow: var(--shadow-brutal-accent);
  transition: all var(--duration-normal) var(--easing-brutal);
}

.primaryCta:hover {
  transform: translate(-2px, -2px);
  box-shadow: var(--shadow-brutal-double);
}

.secondaryCta {
  font-family: var(--font-primary);
  font-size: var(--text-base);
  font-weight: var(--font-bold);
  color: var(--text-primary);
  background-color: transparent;
  border: var(--border-width) var(--border-style) var(--border-primary);
  padding: var(--space-4) var(--space-8);
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: var(--tracking-wide);
  position: relative;
  overflow: hidden;
  box-shadow: var(--shadow-brutal);
  transition: all var(--duration-normal) var(--easing-brutal);
}

.secondaryCta:hover {
  background-color: var(--text-primary);
  color: var(--bg-primary);
  transform: translate(-2px, -2px);
  box-shadow: var(--shadow-brutal-double);
}

.heroVisual {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.portraitContainer {
  position: relative;
  width: 400px;
  height: 500px;
  border: var(--border-width) var(--border-style) var(--border-primary);
  box-shadow: var(--shadow-brutal);
  overflow: hidden;
  background-color: var(--bg-surface);
}

.portraitImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  filter: grayscale(100%) contrast(1.2);
  transition: filter var(--duration-normal) var(--easing-out);
}

.portraitContainer:hover .portraitImage {
  filter: grayscale(0%) contrast(1);
}

.scanEffect {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    var(--color-accent),
    transparent
  );
  animation: scanLine 3s linear infinite;
}

.frameCorners {
  position: absolute;
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
  pointer-events: none;
}

.frameCorners::before,
.frameCorners::after {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  border: 3px solid var(--color-accent);
}

.frameCorners::before {
  top: 0;
  left: 0;
  border-right: none;
  border-bottom: none;
}

.frameCorners::after {
  bottom: 0;
  right: 0;
  border-left: none;
  border-top: none;
}

.floatingBadges {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.badge {
  position: absolute;
  background-color: var(--color-accent);
  color: var(--text-inverse);
  font-family: var(--font-code);
  font-size: var(--text-xs);
  font-weight: var(--font-bold);
  padding: var(--space-2) var(--space-3);
  border: 2px solid var(--bg-primary);
  box-shadow: var(--shadow-brutal);
  animation: gentleFloat 6s ease-in-out infinite;
  white-space: nowrap;
}

.badge:nth-child(1) {
  top: 10%;
  right: -20px;
  animation-delay: 0s;
}

.badge:nth-child(2) {
  top: 60%;
  left: -30px;
  animation-delay: 2s;
}

.badge:nth-child(3) {
  bottom: 20%;
  right: -10px;
  animation-delay: 4s;
}

.liveCode {
  position: absolute;
  bottom: -40px;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--bg-primary);
  border: var(--border-width) var(--border-style) var(--border-primary);
  padding: var(--space-4);
  font-family: var(--font-code);
  font-size: var(--text-sm);
  color: var(--color-success);
  box-shadow: var(--shadow-brutal);
  min-width: 300px;
}

.codeHeader {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  margin-bottom: var(--space-2);
  padding-bottom: var(--space-2);
  border-bottom: 1px solid var(--border-muted);
}

.codeDot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: var(--color-accent);
}

.codeDot:nth-child(2) {
  background-color: var(--color-warning);
}
.codeDot:nth-child(3) {
  background-color: var(--color-error);
}

.codeContent {
  font-family: var(--font-code);
  line-height: 1.4;
}

.codeKeyword {
  color: var(--color-accent);
}
.codeString {
  color: var(--color-success);
}
.codeComment {
  color: var(--color-muted);
}

.backgroundEffects {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  pointer-events: none;
}

.particleSystem {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0.3;
}

.gridOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image:
    linear-gradient(var(--border-primary) 1px, transparent 1px),
    linear-gradient(90deg, var(--border-primary) 1px, transparent 1px);
  background-size: 50px 50px;
  opacity: 0.1;
  animation: gridPulse 4s ease-in-out infinite;
}

.stripePattern {
  position: absolute;
  top: 0;
  left: -50%;
  right: -50%;
  bottom: 0;
  background: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 10px,
    var(--color-accent) 10px,
    var(--color-accent) 11px
  );
  opacity: 0.05;
  animation: slideInBrutal 20s linear infinite;
}

/* Responsive Design */
@media (max-width: 1024px) {
  .heroContainer {
    grid-template-columns: 1fr;
    gap: var(--space-12);
    text-align: center;
  }

  .portraitContainer {
    width: 300px;
    height: 400px;
  }

  .heroMetrics {
    grid-template-columns: repeat(3, 1fr);
    gap: var(--space-4);
  }
}

@media (max-width: 768px) {
  .heroTitle {
    font-size: var(--text-4xl);
  }

  .heroMetrics {
    grid-template-columns: 1fr;
    gap: var(--space-4);
  }

  .heroActions {
    flex-direction: column;
    align-items: stretch;
  }

  .portraitContainer {
    width: 250px;
    height: 320px;
  }

  .liveCode {
    position: relative;
    bottom: auto;
    left: auto;
    transform: none;
    margin-top: var(--space-8);
  }
}

/* Theme-specific overrides */
:global([data-theme='extreme-brutalist']) .heroTitle {
  text-shadow: 4px 4px 0 var(--color-accent);
}

:global([data-theme='refined-brutalist']) .heroTitle {
  text-shadow: none;
}

:global([data-theme='extreme-brutalist']) .metricCard {
  border-radius: 0;
}

:global([data-theme='refined-brutalist']) .metricCard {
  border-radius: var(--border-radius);
}
