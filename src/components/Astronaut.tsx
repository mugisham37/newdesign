/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: wallmasterr (https://sketchfab.com/wallmasterr)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/tenhun-falling-spaceman-fanart-9fd80b6a259f41fd99e6f56eee686dc5
Title: Tenhun Falling spaceman (FanArt)
*/

"use client";

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useMotionValue, useSpring } from "motion/react";
import { useFrame } from "@react-three/fiber";
import type * as THREE from "three";
import type { GLTF } from "three-stdlib";
import type { AstronautProps } from "@/types/components";

// Define the GLTF structure for the astronaut model
interface AstronautGLTF extends GLTF {
  nodes: {
    metarig_rootJoint: THREE.Bone;
    Cube001_0: THREE.SkinnedMesh;
    Cube005_0: THREE.SkinnedMesh;
    Cube002_0: THREE.SkinnedMesh;
    Plane_0: THREE.SkinnedMesh;
    Cube008_0: THREE.SkinnedMesh;
    Cube004_0: THREE.SkinnedMesh;
    Cube003_0: THREE.SkinnedMesh;
    Cube_0: THREE.SkinnedMesh;
    Cube009_0: THREE.SkinnedMesh;
    Cube011_0: THREE.SkinnedMesh;
  };
  materials: {
    "AstronautFallingTexture.png": THREE.MeshStandardMaterial;
  };
}

export function Astronaut(props: AstronautProps) {
  const group = useRef<THREE.Group>(null);
  const [loadError, setLoadError] = useState<string | null>(null);

  // Always call hooks at the top level - never conditionally
  const gltf = useGLTF(
    "/models/tenhun_falling_spaceman_fanart.glb"
  ) as AstronautGLTF;
  const { actions } = useAnimations(gltf.animations, group);
  const yPosition = useMotionValue(5);
  const ySpring = useSpring(yPosition, { damping: 30 });

  // Initialize animations with error handling
  useEffect(() => {
    try {
      if (gltf.animations.length > 0 && actions) {
        const firstAnimation = gltf.animations[0];
        if (firstAnimation?.name && actions[firstAnimation.name]) {
          actions[firstAnimation.name]?.play();
        }
      }
    } catch (error) {
      console.error("Failed to initialize astronaut animations:", error);
      setLoadError("Failed to initialize animations");
    }
  }, [actions, gltf.animations]);

  // Set spring animation with error handling
  useEffect(() => {
    try {
      ySpring.set(-1);
    } catch (error) {
      console.error("Failed to set spring animation:", error);
    }
  }, [ySpring]);

  // Update position on each frame with error handling
  useFrame(() => {
    try {
      if (group.current) {
        group.current.position.y = ySpring.get();
      }
    } catch (error) {
      console.error("Frame update error:", error);
    }
  });

  // Return null if there's a load error
  if (loadError) {
    console.error("Astronaut component error:", loadError);
    return null;
  }

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      rotation={[-Math.PI / 2, -0.2, 2.2]}
      scale={Array.isArray(props.scale) ? props.scale : props.scale || 0.3}
      position={props.position || [1.3, -1, 0]}
    >
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model">
          <group name="Root">
            <group name="metarig">
              <primitive object={gltf.nodes.metarig_rootJoint} />
              <skinnedMesh
                name="Cube001_0"
                geometry={gltf.nodes.Cube001_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube001_0.skeleton}
              />
              <skinnedMesh
                name="Cube005_0"
                geometry={gltf.nodes.Cube005_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube005_0.skeleton}
              />
              <skinnedMesh
                name="Cube002_0"
                geometry={gltf.nodes.Cube002_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube002_0.skeleton}
              />
              <skinnedMesh
                name="Plane_0"
                geometry={gltf.nodes.Plane_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Plane_0.skeleton}
              />
              <skinnedMesh
                name="Cube008_0"
                geometry={gltf.nodes.Cube008_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube008_0.skeleton}
              />
              <skinnedMesh
                name="Cube004_0"
                geometry={gltf.nodes.Cube004_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube004_0.skeleton}
              />
              <skinnedMesh
                name="Cube003_0"
                geometry={gltf.nodes.Cube003_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube003_0.skeleton}
              />
              <skinnedMesh
                name="Cube_0"
                geometry={gltf.nodes.Cube_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube_0.skeleton}
              />
              <skinnedMesh
                name="Cube009_0"
                geometry={gltf.nodes.Cube009_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube009_0.skeleton}
              />
              <skinnedMesh
                name="Cube011_0"
                geometry={gltf.nodes.Cube011_0.geometry}
                material={gltf.materials["AstronautFallingTexture.png"]}
                skeleton={gltf.nodes.Cube011_0.skeleton}
              />
              <group name="Cube001" />
              <group name="Cube005" />
              <group name="Cube002" />
              <group name="Plane" />
              <group name="Cube008" />
              <group name="Cube004" />
              <group name="Cube003" />
              <group name="Cube" />
              <group
                name="Cube009"
                rotation={[-2.708, 0.013, -1.447]}
                scale={1.307}
              />
              <group name="Cube011" />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

// Preload the GLTF model for better performance
useGLTF.preload("/models/tenhun_falling_spaceman_fanart.glb");
